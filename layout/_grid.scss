@use '../config';
@use 'sass:math';
@use '~sass-mq/mq';

/// Get the max grid offset (outer gutter, horizontal margin).
/// @return {number} -
///   maximum value from `$grid-offset`
/// @example scss
///   // Configuration
///   @use '~@pixelherz/sassbox' with (
///     $grid-offset: (
///       default: 20px,
///       mouse: 40px,
///       rabbit: 80px,
///     ),
///     $layout-max-width: 1360px,
///   );
///
///   // Usage
///   .page {
///     // grid-max-offset() will return `80px`
///     max-width: #{sassbox.$layout-max-width + (sassbox.grid-max-offset() * 2)}; // 1520px
///   }
/// @since 1.0.0
/// @group layout
/// @see layout-max-width

@function grid-max-offset() {
  // Collect all offsets (outer gutter) in a list.
  // We'll use this later to get the max offset.
  $grid-offsets: ();
  @each $bp in config.$grid-offset {
    $grid-offsets: append($grid-offsets, nth($bp, 2));
  }
  @return math.max(0, $grid-offsets...);
}

/// Apply vertical offset
/// @output
///   Applies the left/right offset for all breakpoints defined in your
///   configuration (`$grid-offset`).
/// @param {string} $prop ['margin'] -
///   By default the properties `margin-left` and `margin-right` are used. Use
///   this parameter if you prefer another property (`padding` makes sense in
///   some cases).
/// @example scss
///   // Configuration
///   @use '~@pixelherz/sassbox' with (
///     $grid-offset: (
///       default: 20px,
///       mouse: 40px,
///       rabbit: 80px,
///     ),
///   );
///
///   // Usage
///   .layout {
///     @include sassbox.apply-grid-offset($prop: 'padding');
///   }
/// @since 1.0.0
/// @group layout

@mixin apply-grid-offset($prop: 'margin') {
  @each $offset in config.$grid-offset {
    $bp-name: nth($offset, 1);
    $offset-val: nth($offset, 2);
    // Default (no breakpoint)
    @if $bp-name == 'default' {
      #{$prop}-right: $offset-val;
      #{$prop}-left: $offset-val;
    }
    // Breakpoint
    @else if map-has-key(mq.$breakpoints, $bp-name) {
      @include mq.mq($from: $bp-name) {
        #{$prop}-right: $offset-val;
        #{$prop}-left: $offset-val;
      }
    }
    // Breakpoint invalid
    @else {
      @warn "Breakpoint '#{$bp-name}' is not defined in $breakpoints. Check your configuration in $grid-offset, make sure $breakpoints is available or add the breakpoint to $breakpoints.";
    }
  }
}
